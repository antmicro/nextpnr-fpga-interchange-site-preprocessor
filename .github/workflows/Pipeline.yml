# Copyright (C) 2022 Antmicro
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Pipeline

on:
  workflow_call:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  LANG: en_US.UTF-8
  DEBIAN_FRONTEND: noninteractive
  CARGO_TERM_COLOR: always

jobs:
  Build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        build_type:
        - debug
        - release
    
    name: Build (${{ matrix.build_type }})
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt -qqy update
        sudo apt -y install wget gzip capnproto libcapnp-dev
        sudo cp ./third_party/capnproto-java/compiler/src/main/schema/capnp/java.capnp /usr/include/capnp/java.capnp
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    
    - name: Build (debug)
      if: matrix.build_type == 'debug'
      run: cargo build
    
    - name: Build (release)
      if: matrix.build_type == 'release'
      run: cargo build --release

    - name: Upload build
      uses: actions/upload-artifact@v2
      with:
        name: nisp-${{ matrix.build_type }}
        path: target/${{ matrix.build_type }}/nisp
  
  Unit-Tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
    
    name: Unit tests
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt -qqy update
        sudo apt -y install wget gzip capnproto libcapnp-dev
        sudo cp ./third_party/capnproto-java/compiler/src/main/schema/capnp/java.capnp /usr/include/capnp/java.capnp
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          override: true
    
    - name: Test
      run: cargo test

  Test-run:
    needs: [Build]

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        build_type:
        - debug
        - release
        device:
        - xczu7ev
        - xc7a50t
    
    name: Test run (${{ matrix.build_type }} | ${{ matrix.device }})

    steps:
    - name: Install dependencies (release)
      run: |
        sudo apt -qqy update
        sudo apt -y install wget
    
    - name: Install dependencies (debug)
      run: |
        sudo apt -qqy update
        sudo apt -y install wget gzip
    
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: nisp-${{ matrix.build_type }}

    - name: Get device file
      run: |
        mkdir downloads
        wget https://storage.googleapis.com/fpga-interchange-tests/artifacts/prod/foss-fpga-tools/fpga-interchange-tests/continuous/install/20221027-095221/interchange-${{ matrix.device }}-35e0d7e.tar.xz -O downloads/${{ matrix.device }}.device
    
    - name: Decompress device file
      run: gzip -d -c downloads/${{ matrix.device }}.device > ${{ matrix.device }}.device.raw
    
    - name: Full run (debug)
      run: |
        mkdir jsons
        mkdir dots
        ./nisp-${{ matrix.build_type }}/nisp ${{ matrix.device }}.device.raw ${{ matrix.device }}_nisp.bba --raw --threads `nproc` --json-prefix jsons --json :all --dot-prefix --dot :all

    - name: Full run (release)
      run: |
        mkdir jsons
        mkdir dots
        ./nisp-${{ matrix.build_type }}/nisp downloads/${{ matrix.device }}.device ${{ matrix.device }}_nisp.bba --threads `nproc` --json-prefix jsons --json :all --dot-prefix --dot :all
